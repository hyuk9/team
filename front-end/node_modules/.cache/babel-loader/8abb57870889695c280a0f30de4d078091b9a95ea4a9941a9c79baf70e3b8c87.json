{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport UserDataService from \"../../services/UserDataService\";\nexport default {\n  data() {\n    return {\n      currentUser: null,\n      submitted: false,\n      message: \"\",\n      changePwd: false\n    };\n  },\n  methods: {\n    getUser(id) {\n      UserDataService.get(id) // spring 요청\n      //  성공/실패 모르겠지만\n      //  성공하면 then안에 있는것이 실행\n      .then(response => {\n        this.currentUser = response.data;\n        console.log(response.data);\n      })\n      //  실패하면 catch안에 있는것이 실행\n      .catch(e => {\n        console.log(e);\n      });\n    },\n    updateUser(id, changePwd, user) {\n      this.message = \"\";\n      this.submitted = true;\n      // form 유효성 체크 검사\n      // this.$validator.validate() : 유효하면 isValid = true , 아니면 isValid = false\n      this.$validator.validate().then(isValid => {\n        if (isValid) {\n          // user 값 초기화\n          // this.user = new User(\"\", \"\", \"\", this.role);\n          //  공유 저장소의 새사용자 등록 함수 실행\n          UserDataService.update(id, changePwd, user).then(response => {\n            console.log(response.data);\n            this.message = \"The User was updated successfully!\";\n          }).catch(e => {\n            console.log(e);\n          });\n        }\n      });\n    },\n    deleteUser() {\n      UserDataService.delete(this.currentUser.id).then(response => {\n        console.log(response.data);\n        this.$router.push(\"/user\");\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    changePassword() {\n      this.currentUser.password = \"\";\n      this.changePwd = true;\n    }\n  },\n  mounted() {\n    this.message = \"\";\n    this.getUser(this.$route.params.id);\n  }\n};","map":{"version":3,"mappings":";AA6EA;AAEA;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACAC;MACA;MACA;MAAA,CACAC;QACA;QACAC;MACA;MACA;MAAA,CACAC;QACAD;MACA;IACA;IACAE;MACA;MACA;MACA;MACA;MACA;QACA;UACA;UACA;UACA;UACAJ,4CACAC;YACAC;YACA;UACA,GACAC;YACAD;UACA;QACA;MACA;IACA;IACAG;MACAL,4CACAC;QACAC;QACA;MACA,GACAC;QACAD;MACA;IACA;IACAI;MACA;MACA;IACA;EACA;EACAC;IACA;IACA;EACA;AACA","names":["data","currentUser","submitted","message","changePwd","methods","getUser","UserDataService","then","console","catch","updateUser","deleteUser","changePassword","mounted"],"sourceRoot":"src/components/admin","sources":["UserDetail.vue"],"sourcesContent":["<template>\n  <div class=\"col-md-12\">\n    <div v-if=\"currentUser\" class=\"container-fluid w-50\">\n      <div>\n        <div class=\"form-group\">\n          <label for=\"username\">Username</label>\n          <!-- v-validate : 유효성 체크 -->\n          <!-- v-validate=\"'required|min:3|max:20'\" 체크함 -->\n          <!-- errors.has('username') : 에러 발생했는지 검사 -->\n          <!-- {{errors.first('username')}} : 에러 있으면 화면 출력됨, 없으면 안됨 -->\n          <input\n            v-model=\"currentUser.username\"\n            v-validate=\"'required|min:3|max:20'\"\n            type=\"text\"\n            class=\"form-control\"\n            name=\"username\"\n          />\n          <!-- 유효성 체크 후 에러 체크 : errors.hat(체크대상) -->\n          <!-- errors.first(체크대상) : 에러 내용 출력 -->\n          <div v-if=\"submitted && errors.has('username')\" class=\"alert-danger\">\n            {{ errors.first(\"username\") }}\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input\n            v-model=\"currentUser.email\"\n            v-validate=\"'required|email|max:50'\"\n            type=\"email\"\n            class=\"form-control\"\n            name=\"email\"\n          />\n          <div v-if=\"submitted && errors.has('email')\" class=\"alert-danger\">\n            {{ errors.first(\"email\") }}\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input\n            v-model=\"currentUser.password\"\n            type=\"password\"\n            class=\"form-control\"\n            name=\"password\"\n            :disabled=\"!changePwd\"\n          />\n          <button class=\"mt-3 btn btn-warning btn-sm\" @click=\"changePassword\">패스워드 변경</button>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"password\">role</label>\n          <select class=\"form-select\" v-model=\"currentUser.role[0].name\">\n            <option>ROLE_USER</option>\n            <option>ROLE_ADMIN</option>\n          </select>\n        </div>\n\n        <button class=\"mt-3 btn btn-danger\" @click=\"deleteUser\">Delete</button>\n\n        <button\n          type=\"submit\"\n          class=\"ms-3 mt-3 btn btn-success\"\n          @click=\"updateUser(currentUser.id, changePwd, currentUser)\"\n        >\n          Update\n        </button>\n        <p>{{ message }}</p>\n      </div>\n    </div>\n\n    <div v-else>\n      <br />\n      <p>Please click on a User...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport UserDataService from \"../../services/UserDataService\";\n\nexport default {\n  data() {\n    return {\n      currentUser: null,\n      submitted: false,\n      message: \"\",\n      changePwd: false,\n    };\n  },\n  methods: {\n    getUser(id) {\n      UserDataService.get(id) // spring 요청\n        //  성공/실패 모르겠지만\n        //  성공하면 then안에 있는것이 실행\n        .then((response) => {\n          this.currentUser = response.data;\n          console.log(response.data);\n        })\n        //  실패하면 catch안에 있는것이 실행\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    updateUser(id, changePwd, user) {\n      this.message = \"\";\n      this.submitted = true;\n      // form 유효성 체크 검사\n      // this.$validator.validate() : 유효하면 isValid = true , 아니면 isValid = false\n      this.$validator.validate().then((isValid) => {\n        if (isValid) {\n          // user 값 초기화\n          // this.user = new User(\"\", \"\", \"\", this.role);\n          //  공유 저장소의 새사용자 등록 함수 실행\n          UserDataService.update(id, changePwd, user)\n            .then((response) => {\n              console.log(response.data);\n              this.message = \"The User was updated successfully!\";\n            })\n            .catch((e) => {\n              console.log(e);\n            });\n        }\n      });\n    },\n    deleteUser() {\n      UserDataService.delete(this.currentUser.id)\n        .then((response) => {\n          console.log(response.data);\n          this.$router.push(\"/user\");\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    changePassword() {\n      this.currentUser.password = \"\";\n      this.changePwd = true;\n    }\n  },\n  mounted() {\n    this.message = \"\";\n    this.getUser(this.$route.params.id);\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}