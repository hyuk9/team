{"ast":null,"code":"import UserDataService from \"../../services/UserDataService\";\nexport default {\n  data() {\n    return {\n      user: [],\n      // dname: \"\", ->(변경) searchUsername: \"\",\n      searchUsername: \"\",\n      // 부서명\n\n      // 페이징을 위한 변수 정의\n      page: 1,\n      // 현재 페이지\n      count: 0,\n      // 전체 데이터 건수\n      pageSize: 9,\n      // 한페이지당 몇개를 화면에 보여줄지 결정하는 변수\n\n      pageSizes: [3, 6, 9] // select box 에 넣을 기본 데이터\n    };\n  },\n\n  methods: {\n    retrieveUser() {\n      UserDataService.getAll(this.searchUsername, this.page - 1, this.pageSize).then(response => {\n        const {\n          user,\n          totalItems\n        } = response.data;\n        this.user = user;\n        this.count = totalItems;\n        console.log(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    handlePageSizeChange(event) {\n      this.pageSize = event.target.value;\n      this.page = 1;\n      this.retrieveUser();\n    },\n    handlePageChange(value) {\n      this.page = value;\n      this.retrieveUser();\n    }\n  },\n  mounted() {\n    this.retrieveUser();\n  }\n};","map":{"version":3,"mappings":"AAmGA;AAEA;EACAA;IACA;MACAC;MACA;MACAC;MAAA;;MAEA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;;MAEAC;IACA;EACA;;EACAC;IACAC;MACAC,0EACAC;QACA;UAAAT;UAAAU;QAAA;QACA;QACA;QAEAC;MACA,GACAC;QACAD;MACA;IACA;IAEAE;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;EACA;EAEAC;IACA;EACA;AACA","names":["data","user","searchUsername","page","count","pageSize","pageSizes","methods","retrieveUser","UserDataService","then","totalItems","console","catch","handlePageSizeChange","handlePageChange","mounted"],"sourceRoot":"src/components/admin","sources":["UserList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"hero\">\r\n      <div class=\"hero hero-inner bg-dark\">\r\n        <div\r\n          id=\"board\"\r\n          class=\"container\"\r\n          data-aos=\"fade-up\"\r\n          data-aos-delay=\"100\"\r\n        >\r\n          <div class=\"row align-items-center\">\r\n            <div class=\"col-lg-6 mx-auto text-center\">\r\n              <div class=\"intro-wrap\">\r\n                <h1>게시판 이름 넣는 곳</h1>\r\n                <p class=\"text-white mb-5\">쓰고 싶은 말을 쓰는 공간입니다</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- search 관련 div 시작 -->\r\n    <div class=\"col-md-8\">\r\n      <div class=\"input-group mb-3\">\r\n        <!--            Todo : 수정 시작 -->\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Search by Username\"\r\n          v-model=\"searchUsername\"\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <button\r\n            class=\"btn btn-outline-secondary\"\r\n            type=\"button\"\r\n            @click=\"\r\n              page = 1;\r\n              retrieveUser();\r\n            \"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n        <!--            Todo : 수정 끝 -->\r\n      </div>\r\n    </div>\r\n    <!-- search 관련 div 끝 -->\r\n\r\n    <!--    Todo : page 바 시작 -->\r\n    <div class=\"col-md-12\">\r\n      <div class=\"mb-3\">\r\n        Items per Page:\r\n        <select v-model=\"pageSize\" @change=\"handlePageSizeChange($event)\">\r\n          <option v-for=\"size in pageSizes\" :key=\"size\" :value=\"size\">\r\n            <!--            size : 3, 6, 9 -->\r\n            {{ size }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n\r\n      <b-pagination\r\n        v-model=\"page\"\r\n        :total-rows=\"count\"\r\n        :per-page=\"pageSize\"\r\n        pills\r\n        prev-text=\"Prev\"\r\n        next-text=\"Next\"\r\n        @change=\"handlePageChange\"\r\n      ></b-pagination>\r\n    </div>\r\n    <!-- Todo : page 바 끝 -->\r\n\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Username</th>\r\n          <th scope=\"col\">Email</th>\r\n          <th scope=\"col\">roles</th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody v-for=\"(data, index) in user\" :key=\"index\">\r\n        <tr>\r\n          <td>{{ data.username }}</td>\r\n          <!-- <td>{{ data.lastName }}</td>  -->\r\n          <td>{{ data.email }}</td>\r\n          <td>{{ data.name }}</td>\r\n          <td>\r\n            <router-link :to=\"'/user/' + data.id\"\r\n              ><span class=\"badge bg-success\">Edit</span></router-link\r\n            >\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UserDataService from \"../../services/UserDataService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: [],\r\n      // dname: \"\", ->(변경) searchUsername: \"\",\r\n      searchUsername: \"\", // 부서명\r\n\r\n      // 페이징을 위한 변수 정의\r\n      page: 1, // 현재 페이지\r\n      count: 0, // 전체 데이터 건수\r\n      pageSize: 9, // 한페이지당 몇개를 화면에 보여줄지 결정하는 변수\r\n\r\n      pageSizes: [3, 6, 9], // select box 에 넣을 기본 데이터\r\n    };\r\n  },\r\n  methods: {\r\n    retrieveUser() {\r\n      UserDataService.getAll(this.searchUsername, this.page - 1, this.pageSize)\r\n        .then((response) => {\r\n          const { user, totalItems } = response.data;\r\n          this.user = user;\r\n          this.count = totalItems;\r\n\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    handlePageSizeChange(event) {\r\n      this.pageSize = event.target.value;\r\n      this.page = 1;\r\n      this.retrieveUser();\r\n    },\r\n\r\n    handlePageChange(value) {\r\n      this.page = value;\r\n      this.retrieveUser();\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.retrieveUser();\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}