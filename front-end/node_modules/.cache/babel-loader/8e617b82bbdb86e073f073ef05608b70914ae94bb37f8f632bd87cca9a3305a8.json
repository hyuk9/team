{"ast":null,"code":"import UserDataService from \"../../services/UserDataService\";\nexport default {\n  data() {\n    return {\n      user: [],\n      // dname: \"\", ->(변경) searchUsername: \"\",\n      searchUsername: \"\",\n      // 부서명\n\n      // 페이징을 위한 변수 정의\n      page: 1,\n      // 현재 페이지\n      count: 0,\n      // 전체 데이터 건수\n      pageSize: 9,\n      // 한페이지당 몇개를 화면에 보여줄지 결정하는 변수\n\n      pageSizes: [3, 6, 9] // select box 에 넣을 기본 데이터\n    };\n  },\n\n  methods: {\n    retrieveUser() {\n      UserDataService.getAll(this.searchUsername, this.page - 1, this.pageSize).then(response => {\n        const {\n          user,\n          totalItems\n        } = response.data;\n        this.user = user;\n        this.count = totalItems;\n        console.log(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    handlePageSizeChange(event) {\n      this.pageSize = event.target.value;\n      this.page = 1;\n      this.retrieveUser();\n    },\n    handlePageChange(value) {\n      this.page = value;\n      this.retrieveUser();\n    }\n  },\n  mounted() {\n    this.retrieveUser();\n  }\n};","map":{"version":3,"mappings":"AAmGA;AAEA;EACAA;IACA;MACAC;MACA;MACAC;MAAA;;MAEA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;;MAEAC;IACA;EACA;;EACAC;IACAC;MACAC,0EACAC;QACA;UAAAT;UAAAU;QAAA;QACA;QACA;QAEAC;MACA,GACAC;QACAD;MACA;IACA;IAEAE;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;EACA;EAEAC;IACA;EACA;AACA","names":["data","user","searchUsername","page","count","pageSize","pageSizes","methods","retrieveUser","UserDataService","then","totalItems","console","catch","handlePageSizeChange","handlePageChange","mounted"],"sourceRoot":"src/components/admin","sources":["UserList.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"hero\">\n      <div class=\"hero hero-inner bg-dark\">\n        <div\n          id=\"board\"\n          class=\"container\"\n          data-aos=\"fade-up\"\n          data-aos-delay=\"100\"\n        >\n          <div class=\"row align-items-center\">\n            <div class=\"col-lg-6 mx-auto text-center\">\n              <div class=\"intro-wrap\">\n                <h1>게시판 이름 넣는 곳</h1>\n                <p class=\"text-white mb-5\">쓰고 싶은 말을 쓰는 공간입니다</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- search 관련 div 시작 -->\n    <div class=\"col-md-8\">\n      <div class=\"input-group mb-3\">\n        <!--            Todo : 수정 시작 -->\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Search by Username\"\n          v-model=\"searchUsername\"\n        />\n        <div class=\"input-group-append\">\n          <button\n            class=\"btn btn-outline-secondary\"\n            type=\"button\"\n            @click=\"\n              page = 1;\n              retrieveUser();\n            \"\n          >\n            Search\n          </button>\n        </div>\n        <!--            Todo : 수정 끝 -->\n      </div>\n    </div>\n    <!-- search 관련 div 끝 -->\n\n    <!--    Todo : page 바 시작 -->\n    <div class=\"col-md-12\">\n      <div class=\"mb-3\">\n        Items per Page:\n        <select v-model=\"pageSize\" @change=\"handlePageSizeChange($event)\">\n          <option v-for=\"size in pageSizes\" :key=\"size\" :value=\"size\">\n            <!--            size : 3, 6, 9 -->\n            {{ size }}\n          </option>\n        </select>\n      </div>\n\n      <b-pagination\n        v-model=\"page\"\n        :total-rows=\"count\"\n        :per-page=\"pageSize\"\n        pills\n        prev-text=\"Prev\"\n        next-text=\"Next\"\n        @change=\"handlePageChange\"\n      ></b-pagination>\n    </div>\n    <!-- Todo : page 바 끝 -->\n\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Username</th>\n          <th scope=\"col\">Email</th>\n          <th scope=\"col\">roles</th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody v-for=\"(data, index) in user\" :key=\"index\">\n        <tr>\n          <td>{{ data.username }}</td>\n          <!-- <td>{{ data.lastName }}</td>  -->\n          <td>{{ data.email }}</td>\n          <td>{{ data.name }}</td>\n          <td>\n            <router-link :to=\"'/user/' + data.id\"\n              ><span class=\"badge bg-success\">Edit</span></router-link\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport UserDataService from \"../../services/UserDataService\";\n\nexport default {\n  data() {\n    return {\n      user: [],\n      // dname: \"\", ->(변경) searchUsername: \"\",\n      searchUsername: \"\", // 부서명\n\n      // 페이징을 위한 변수 정의\n      page: 1, // 현재 페이지\n      count: 0, // 전체 데이터 건수\n      pageSize: 9, // 한페이지당 몇개를 화면에 보여줄지 결정하는 변수\n\n      pageSizes: [3, 6, 9], // select box 에 넣을 기본 데이터\n    };\n  },\n  methods: {\n    retrieveUser() {\n      UserDataService.getAll(this.searchUsername, this.page - 1, this.pageSize)\n        .then((response) => {\n          const { user, totalItems } = response.data;\n          this.user = user;\n          this.count = totalItems;\n\n          console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    handlePageSizeChange(event) {\n      this.pageSize = event.target.value;\n      this.page = 1;\n      this.retrieveUser();\n    },\n\n    handlePageChange(value) {\n      this.page = value;\n      this.retrieveUser();\n    },\n  },\n\n  mounted() {\n    this.retrieveUser();\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}