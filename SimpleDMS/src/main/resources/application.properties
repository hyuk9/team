# 포트 설정
server.port=8000

# .yml 설정
# server:
# port : '8000'

#
## 로컬 DB 접속 정보
## driver-class-name=db라이브러리 : DB 라이브러리 정보(Oracle, Mysql 등등)
#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
## url=db접속정보 : jdbc:log4jdbc:oracle:thin:@DBip정보:DB포트번호/DB명
#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521/xe
## username=DB계정명
#spring.datasource.username=scott
## password=DB패스워드
#spring.datasource.password=tiger


##.yml
#spring:
#    datasource:
#        driver-class-name:
#        url:
#        username:
#        password:

#
#
## 오라클 클라우드 DB 접속 정보
#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
## jdbc:log4jdbc:oracle:thin:@orcl_low?TNS_ADMIN=전자지갑경로
#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@DsCloud95_high?TNS_ADMIN=/Users/hyuk/VScode_workout/04_SQL/Wallet_DsCloud95
#spring.datasource.username=JANGDH93
#spring.datasource.password=Ehdtjdwkdehdgur93


# 오라클 클라우드 DB 접속 정보
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
# jdbc:log4jdbc:oracle:thin:@orcl_low?TNS_ADMIN=전자지갑경로
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@dongsungteamproject_high?TNS_ADMIN=/Users/hyuk/VScode_workout/github/cloud_wallet/Wallet_DONGSUNGTEAMPROJECT
spring.datasource.username=JANGDH93
spring.datasource.password=Ehdtjdwkdehdgur93

#
## 오라클 클라우드 DB 접속 정보
#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
## jdbc:log4jdbc:oracle:thin:@orcl_low?TNS_ADMIN=전자지갑경로
#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@dongsungteamproject_high?TNS_ADMIN=전자지갑경로
#spring.datasource.username=유저명
#spring.datasource.password=비밀번호


# HikariCP settings : 클라우드 DB 접속을 1개로 제한하는 설정
spring.datasource.hikari.minimumIdle=1
spring.datasource.hikari.maximumPoolSize=1
spring.datasource.hikari.poolName=HikariPoolBooks


# jpa 설정
# .ddl-auto=create -> 서버 재시작 시 기존 테이블(DB 오브젝트) 삭제 후 다시 생성하는 옵션
# .ddl-auto=update -> 서버 재시작 시 테이블(DB 오브젝트) 없는 것만 다시 생성하는 옵션
# .ddl-auto=none -> 서버 재시작 시 아무 것도 안함
# spring.jpa.show-sql=true : 스프링 콘솔에 sql문을 보여주는 로그 활성화
# spring.jpa.database-platform=DB_제품설정(Oracle, MySql 등)
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
spring.jpa.show-sql=true
# 1) resource/data.sql 자동 실행 ( DML 실행 )
#  -> data.sql ( dml 실행 ), schema.sql ( ddl 실행 )
spring.jpa.defer-datasource-initialization=false
# sql log 찍기
spring.jpa.properties.hibernate.format_sql=true
#Logging Setting , hibernate info 레벨 로깅 설정 : debug, trace 등
logging.level.org.hibernate=info
# 2)  resource/data.sql 자동 실행 ( DML 실행 )
#  -> data.sql ( dml 실행 ), schema.sql ( ddl 실행 )
spring.sql.init.mode=always
# 서버 시작시 sql문 실행할 때 오류 무시하고 계속 진행
spring.sql.init.continue-on-error=true


# 자바 소스 변경 시 자동 재시작 ( 시간 틈이 있음 )
spring.devtools.restart.enabled=true

# TODO: login 관련 속성 추가
# spring security/jwt 에서 비밀키 설정을 위한 속성
# 전자서명 : 공용키/비밀키를 사용해서 인증
# JWT setting : 아래 키이름/키값 개발자가 자유롭게 만들면 됨
bezkoder.app.jwtSecret= bezKoderSecretKey
# 토큰 만료시간( 단위: 밀리세컨드 )
bezkoder.app.jwtExpirationMs= 86400000

